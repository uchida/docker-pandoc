version: 2.1

commands:
  docker-login:
    steps:
      - run: echo $DOCKER_PASSWORD | docker login --password-stdin -u $DOCKER_LOGIN

jobs:
  build:
    machine:
      image: ubuntu-2004:2022.04.1
      resource_class: <<parameters.resource_class>>
    parameters:
      resource_class:
        type: enum
        enum: ["medium", "arm.medium"]
      arch:
        type: enum
        enum: ["amd64", "arm64"]
    steps: &build-push-steps
      - checkout
      - docker-login
      - run: |
          if [ -n "<<pipeline.git.tag>>" ]; then
            tag="<<pipeline.git.tag>>"
          else
            tag="latest"
          fi
          docker build -t "auchida/pandoc:base" .
          for v in base noto-jp noto-cjk-jp; do
            docker build -t "auchida/pandoc:${tag}-$v-<<parameters.arch>>" -f Dockerfile.$v .
          done

  build_push:
    machine:
      image: ubuntu-2004:2022.04.1
      resource_class: <<parameters.resource_class>>
    parameters:
      resource_class:
        type: enum
        enum: ["medium", "arm.medium"]
      arch:
        type: enum
        enum: ["amd64", "arm64"]
    steps: &build-push-steps
      - checkout
      - docker-login
      - run: |
          if [ -n "<<pipeline.git.tag>>" ]; then
            tag="<<pipeline.git.tag>>"
          else
            tag="latest"
          fi
          docker build -t "auchida/pandoc:base" .
          for v in base noto-jp noto-cjk-jp; do
            docker build -t "auchida/pandoc:${tag}-$v-<<parameters.arch>>" -f Dockerfile.$v .
            docker push "auchida/pandoc:${tag}-$v-<<parameters.arch>>"
          done

  push_manifest:
    machine:
      image: ubuntu-2004:2022.04.1
    steps:
      - checkout
      - docker-login
      - run: |
          if [ -n "<<pipeline.git.tag>>" ]; then
            tag="<<pipeline.git.tag>>"
          else
            tag="latest"
          fi
          for v in base noto-jp noto-cjk-jp; do
            docker manifest create "auchida/pandoc:${tag}-$v" \
              "auchida/pandoc:${tag}-$v-amd64" \
              "auchida/pandoc:${tag}-$v-arm64"
            docker manifest push "auchida/pandoc:${tag}-$v"
          done
          if [ $tag = "latest" ]; then
            docker manifest create "auchida/pandoc:latest" \
              "auchida/pandoc:${tag}-base-amd64" \
              "auchida/pandoc:${tag}-base-arm64"
            docker manifest push "auchida/pandoc:${tag}"
          fi

workflows:
  version: 2
  build:
    jobs:
      - build:
          name: build_amd64
          resource_class: medium
          arch: amd64
          context:
            - docker-hub
      - build:
          name: build_arm64
          resource_class: arm.medium
          arch: arm64
          context:
            - docker-hub
  publish:
    jobs:
      - build_push:
          name: build_push_amd64
          resource_class: medium
          arch: amd64
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          context:
            - docker-hub
      - build_push:
          name: build_push_arm64
          resource_class: arm.medium
          arch: arm64
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          context:
            - docker-hub
      - push_manifest:
          name: push_manifest
          requires:
            - build_push_amd64
            - build_push_arm64
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          context:
            - docker-hub
